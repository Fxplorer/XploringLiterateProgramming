[{"uri":"http://localhost:8901/index.html","title":"What is FsUnit?\n","content":"What is FsUnit?\nFsUnit is a set of libraries that makes unit-testing with F# more enjoyable. It adds a special syntax to your favorite .NET testing framework.\nFsUnit currently supports NUnit, xUnit, and MsTest.\nThe goals of FsUnit are:\n\nto make unit-testing feel more at home in F# , i.e., more functional.\nto leverage existing test frameworks while at the same time adapting them to the F# language in new ways.\n\nNuGet packages are available for each of the supported testing frameworks:\n\n - NUnit\n - xUnit\n - MsTest\n\nSyntax\nWith FsUnit, you can write unit tests like this:\n","headings":["What is FsUnit?","Syntax"],"type":"content"},{"uri":"http://localhost:8901/xplore3.html","title":"xplore3","content":"//This is a comment in an F# block\n\n///xml comment in an F# block\nlet x = 1\n\n///tooltip for function\nlet y v = \n    v \u002B 1\n\n//test\ny 1\n|\u0026gt; printfn \u0026quot;%A\u0026quot;\n\nflowchart LR\n  A[Avalonia] --\u0026gt; B[SKia]--\u0026gt; C{Decision}\n  \n  C --\u0026gt; D[Result one]\n  C --\u0026gt; E[Result two]\n\n\n\n\n\n        import mermaid from \u0026#39;https://cdn.jsdelivr.net/npm/mermaid@10.6.1/dist/mermaid.esm.min.mjs\u0026#39;;\n        let renderTarget = document.getElementById(\u0026#39;70b1210cf3404f9baecac57cfa02e9e2\u0026#39;);\n        try {\n            const {svg, bindFunctions} = await mermaid.mermaidAPI.render( \n                \u0026#39;mermaid_70b1210cf3404f9baecac57cfa02e9e2\u0026#39;, \n                \u0060flowchart LR\n\nA[Avalonia] --\u0026gt; B[SKia]--\u0026gt; C{Decision}\nC --\u0026gt; D[Result one]\nC --\u0026gt; E[Result two]\u0060);\nrenderTarget.innerHTML = svg;\nbindFunctions?.(renderTarget);\n}\ncatch (error) {\nconsole.log(error);\n}\n\n\n\n","headings":[],"type":"content"},{"uri":"http://localhost:8901/xplore1.html","title":"First-level heading\n","content":"First-level heading\nSome more documentation using Markdown.\nlet helloWorld() = printfn \u0026quot;Hello world!\u0026quot;\n\nSecond-level heading\nWith some more documentation\nlet numbers = [ 0 .. 99 ]\n\nWarning: Output, it-value and value references require --eval\nList.sum numbers\n\nWarning: Output, it-value and value references require --eval\n","headings":["First-level heading","Second-level heading"],"type":"content"}]